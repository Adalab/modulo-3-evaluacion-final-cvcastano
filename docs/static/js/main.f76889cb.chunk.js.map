{"version":3,"sources":["components/CharacterCard.js","components/CharacterList.js","components/Filters.js","services/getData.js","images/logo.png","components/Header.js","components/App.js","index.js"],"names":["CharacterCard","props","className","src","character","image","alt","name","species","CharacterList","characterCard","characters","map","id","Filters","htmlFor","type","onChange","ev","handleInput","key","value","target","getDataFromApi","fetch","then","response","json","data","results","Header","logo","App","useState","setCharacters","setName","useEffect","filteredCharacters","filter","toLowerCase","includes","input","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAmBeA,MAhBf,SAAuBC,GACnB,OACI,qCACI,qBACIC,UAAU,WACVC,IAAKF,EAAMG,UAAUC,MACrBC,IAAG,mBAAcL,EAAMG,UAAUG,QAErC,oBAAIL,UAAU,aAAd,SAA4BD,EAAMG,UAAUG,OAC5C,mBAAGL,UAAU,YAAb,SAA0BD,EAAMG,UAAUI,cCQvCC,MAhBf,SAAuBR,GACvB,IAAMS,EAAgBT,EAAMU,WAAWC,KAAI,SAAAR,GACvC,OAAO,qBAAuBF,UAAU,OAAjC,cAAyC,cAAC,EAAD,CAAeE,UAAWA,IAAnE,MAASA,EAAUS,OAG1B,OACI,mCACI,oBAAIX,UAAU,YAAd,SAEKQ,OCUFI,MAnBf,SAAiBb,GASb,OACI,+BACI,oBAAGC,UAAU,cAAb,UACI,uBAAOA,UAAU,QAAQa,QAAQ,OAAjC,4BACA,uBAAOb,UAAU,QAAQc,KAAK,OAAOH,GAAG,OAAON,KAAK,OAAOU,SAXnD,SAACC,GACjBjB,EAAMkB,YAAY,CACdC,IAAK,OACLC,MAAOH,EAAGI,OAAOD,iBCQdE,EAfQ,WACnB,OAAOC,MAAM,uCACRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,OAAOA,EAAKC,QAAQjB,KAAI,SAAAR,GACpB,MAAO,CACHS,GAAIT,EAAUS,GACdN,KAAMH,EAAUG,KAChBC,QAASJ,EAAUI,QACnBH,MAAOD,EAAUC,cCXtB,MAA0B,iCCgB1ByB,MAZf,WACI,OAEI,mCACA,qBAAK5B,UAAU,aAAf,SACE,qBAAKA,UAAU,OAAOC,IAAK4B,EAAMzB,IAAI,0BAEvC,qBAAKJ,UAAU,SAAf,kCCsBO8B,MA1Bf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNtB,EADM,KACMuB,EADN,OAEWD,mBAAS,IAFpB,mBAEN1B,EAFM,KAEA4B,EAFA,KAIbC,qBAAU,WACRb,IAAiBE,MAAK,SAAAG,GAAI,OAAIM,EAAcN,QAC3C,IAEH,IAKMS,EAAqB1B,EAAW2B,QAAO,SAAAlC,GAAe,OAAOA,EAAUG,KAAKgC,cAAcC,SAASjC,EAAKgC,kBAE9G,OACE,qCACA,cAAC,EAAD,IACA,iCACE,cAAC,EAAD,CAASpB,YAXO,SAACsB,GACD,SAAdA,EAAMrB,KACRe,EAAQM,EAAMpB,UAUd,cAAC,EAAD,CAAeV,WAAY0B,WCrBjCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.f76889cb.chunk.js","sourcesContent":["import '../stylesheets/index.scss';\r\n\r\n\r\nfunction CharacterCard(props) {\r\n    return (\r\n        <>\r\n            <img\r\n                className=\"card-img\"\r\n                src={props.character.image}\r\n                alt={`Image of ${props.character.name}`}\r\n            />\r\n            <h4 className=\"card-title\">{props.character.name}</h4>\r\n            <p className=\"card-text\">{props.character.species}</p>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default CharacterCard;","import '../stylesheets/index.scss';\r\nimport CharacterCard from './CharacterCard';\r\n\r\n\r\nfunction CharacterList(props) {\r\nconst characterCard = props.characters.map(character => {\r\n    return <li key={character.id} className=\"card\"> <CharacterCard character={character} /> </li>\r\n}) \r\n\r\n    return (\r\n        <>\r\n            <ul className=\"card-list\">\r\n            \r\n                {characterCard}\r\n             \r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport '../stylesheets/index.scss';\r\n\r\n\r\nfunction Filters(props) {\r\n\r\n    const handleInput = (ev) => {\r\n        props.handleInput({\r\n            key: 'name',\r\n            value: ev.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <p className=\"input-group\">\r\n                <label className=\"label\" htmlFor=\"name\">Type to search</label>\r\n                <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" onChange={handleInput} />\r\n            </p>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Filters;\r\n\r\n\r\n","\r\n\r\nconst getDataFromApi = () => {\r\n    return fetch('//rickandmortyapi.com/api/character')\r\n        .then(response => response.json())\r\n        .then(data => { \r\n            return data.results.map(character => {\r\n                return {\r\n                    id: character.id,\r\n                    name: character.name,\r\n                    species: character.species,\r\n                    image: character.image\r\n                };\r\n            });\r\n        });\r\n};\r\n\r\nexport default getDataFromApi;","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React from 'react';\r\nimport '../stylesheets/index.scss';\r\nimport logo from '../images/logo.png';\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <header>\r\n        <div className=\"header-top\">\r\n          <img className=\"logo\" src={logo} alt=\"Rick and Morty logo\" />\r\n        </div>\r\n        <div className=\"stripe\">character finder</div>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport '../stylesheets/index.scss';\nimport CharacterList from './CharacterList';\nimport Filters from './Filters';\nimport getDataFromApi from '../services/getData';\nimport Header from './Header';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getDataFromApi().then(data => setCharacters(data));\n  }, [])\n\n  const handleInput = (input) => {\n    if (input.key === 'name') {\n      setName(input.value);\n    }\n  }\n  const filteredCharacters = characters.filter(character => { return character.name.toLowerCase().includes(name.toLowerCase()) });\n\n  return (\n    <>\n    <Header />\n    <main>\n      <Filters handleInput={handleInput} />\n      <CharacterList characters={filteredCharacters} />\n    </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './stylesheets/index.scss';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}